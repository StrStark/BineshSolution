// <auto-generated />
using System;
using DataBaseManager.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataBaseManager.Migrations.Accounting
{
    [DbContext(typeof(AccountingDbContext))]
    [Migration("20251021144402_UpdatedAccount3")]
    partial class UpdatedAccount3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Models.DataBaseModels.Account.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<int>("Article")
                        .HasColumnType("integer");

                    b.Property<string>("ArticleDescription")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<long>("Credit")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Debit")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GroupType")
                        .HasColumnType("integer");

                    b.Property<int>("GroupTypeDesc")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLayerOne")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("OperationName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("SeriesNumber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<long>("SumCredit")
                        .HasColumnType("bigint");

                    b.Property<long>("SumDebit")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("chequeCode")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("inflection")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Shared.Models.DataBaseModels.Account.Account", b =>
                {
                    b.HasOne("Shared.Models.DataBaseModels.Account.Account", "Parent")
                        .WithMany("SubAccounts")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Shared.Models.DataBaseModels.Account.Account", b =>
                {
                    b.Navigation("SubAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
